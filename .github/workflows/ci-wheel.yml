name: Build CUDA wheel

on:
  push:           # any push to main
    branches: [ "main" ]
  pull_request:   # PRs against main
  workflow_dispatch:   # manual “Run workflow” button

jobs:
  wheel:
    runs-on: windows-2022         # runner with VS 2022 pre-installed

    steps:
    # ───────────────────────────────────────────────────────────────
    # 1)  clone + get sub-modules (vendor/llama.cpp) in one go
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'   # ← **THIS** pulls vendor/llama.cpp
        fetch-depth: 1            # shallow, faster

    # 2)  set up MSVC “x64 Native Tools” env
    - name: Enable MSVC build environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    # 3)  header-only CUDA toolkit (nvcc, headers, stubs) – no GPU needed
    - name: Install CUDA 12.4 tool-chain
      uses: Jimver/cuda-toolkit@v0.2.16
      with:
        cuda: '12.4.1'            # last point-release available

    # 4)  run our PowerShell build script
    - name: Build wheel
      shell: pwsh
      run: ./build-wheel.ps1

    # 5)  always keep the wheel as an artifact
    - uses: actions/upload-artifact@v4
      with:
        name: wheel
        path: dist/*.whl

    # 6)  when the push is a git *tag* – publish as a GitHub Release asset
    - name: (tag push) Publish release asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*.whl
